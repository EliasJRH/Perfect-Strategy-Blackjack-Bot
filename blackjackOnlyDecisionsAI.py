
starting_cash = 1000
cash = starting_cash
betting_unit = 20
lowest_bet = 10

# Similarily to storing the card counts, the decision that the player will make 
# based on the dealers faceup card and either the players card or hand value, is stored in
# a nested dictionary. This is done so that run time is given priority over storage space
perfect_strategy_table_counts = {
    'A' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'H',
           11 : 'H',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '2' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'D',
           11 : 'D',
           12 : 'H',
           13 : 'S',
           14 : 'S',
           15 : 'S',
           16 : 'S',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '3' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'D',
           10 : 'D',
           11 : 'D',
           12 : 'H',
           13 : 'S',
           14 : 'S',
           15 : 'S',
           16 : 'S',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '4' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'D',
           10 : 'D',
           11 : 'D',
           12 : 'S',
           13 : 'S',
           14 : 'S',
           15 : 'S',
           16 : 'S',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '5' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'D',
           10 : 'D',
           11 : 'D',
           12 : 'S',
           13 : 'S',
           14 : 'S',
           15 : 'S',
           16 : 'S',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '6' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'D',
           10 : 'D',
           11 : 'D',
           12 : 'S',
           13 : 'S',
           14 : 'S',
           15 : 'S',
           16 : 'S',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '7' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'D',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '8' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'D',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '9' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'D',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    '1' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'H',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    'J' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'H',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    'Q' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'H',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
    'K' : {2 : 'H',
           3 : 'H',
           4 : 'H',
           5 : 'H',
           6 : 'H',
           7 : 'H',
           8 : 'H',
           9 : 'H',
           10 : 'H',
           11 : 'D',
           12 : 'H',
           13 : 'H',
           14 : 'H',
           15 : 'H',
           16 : 'H',
           17 : 'S',
           18 : 'S',
           19 : 'S',
           20 : 'S',
           21 : 'S'},
}

# The blackjack perfect strategy table is divided into 3 sections. The first seen above involves 
# observing ones hand value and performing actions based on that. The table below these comments involves
# performing actions based on if the player has an ace and some other card
perfect_strategy_table_aces = {
    'A2' : {'A' : 'H',
            '2' : 'H',
            '3' : 'H',
            '4' : 'H',
            '5' : 'D',
            '6' : 'D',
            '7' : 'H',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
          'K' : 'H'}, 
    'A3' : {'A' : 'H',
          '2' : 'H',
          '3' : 'H',
          '4' : 'H',
          '5' : 'D',
          '6' : 'D',
          '7' : 'H',
          '8' : 'H',
          '9' : 'H',
          '1' : 'H',
          'J' : 'H',
          'Q' : 'H',
          'K' : 'H'},
    'A4' : {'A' : 'H',
          '2' : 'H',
          '3' : 'H',
          '4' : 'D',
          '5' : 'D',
          '6' : 'D',
          '7' : 'H',
          '8' : 'H',
          '9' : 'H',
          '1' : 'H',
          'J' : 'H',
          'Q' : 'H',
          'K' : 'H'},
    'A5' : {'A' : 'H',
          '2' : 'H',
          '3' : 'H',
          '4' : 'D',
          '5' : 'D',
          '6' : 'D',
          '7' : 'H',
          '8' : 'H',
          '9' : 'H',
          '1' : 'H',
          'J' : 'H',
          'Q' : 'H',
          'K' : 'H'},
    'A6' : {'A' : 'H',
            '2' : 'H',
            '3' : 'D',
            '4' : 'D',
            '5' : 'D',
            '6' : 'D',
            '7' : 'H',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    'A7' : {'A' : 'H',
            '2' : 'S',
            '3' : 'D',
            '4' : 'D',
            '5' : 'D',
            '6' : 'D',
            '7' : 'S',
            '8' : 'S',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    'A8' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'A9' :{'A' : 'S',
           '2' : 'S',
           '3' : 'S',
           '4' : 'S',
           '5' : 'S',
           '6' : 'S',
           '7' : 'S',
           '8' : 'S',
           '9' : 'S',
           '1' : 'S',
           'J' : 'S',
           'Q' : 'S',
           'K' : 'S'} ,
    'A1' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'AJ' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'AQ' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'AK' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'}
}
    
# This table holds the proper actions that should be taken if the user has a pair of the same card
perfect_strategy_table_pairs = {
    'AA' : {'A' : 'SP',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'SP',
            '8' : 'SP',
            '9' : 'SP',
            '1' : 'SP',
            'J' : 'SP',
            'Q' : 'SP',
            'K' : 'SP'},
    '22' : {'A' : 'H',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'SP',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    '33' : {'A' : 'H',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'SP',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    '44' : {'A' : 'H',
            '2' : 'H',
            '3' : 'H',
            '4' : 'H',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'H',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    '55' : {'A' : 'H',
            '2' : 'D',
            '3' : 'D',
            '4' : 'D',
            '5' : 'D',
            '6' : 'D',
            '7' : 'D',
            '8' : 'D',
            '9' : 'D',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    '66' : {'A' : 'H',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'H',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    '77' : {'A' : 'H',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'SP',
            '8' : 'H',
            '9' : 'H',
            '1' : 'H',
            'J' : 'H',
            'Q' : 'H',
            'K' : 'H'},
    '88' : {'A' : 'SP',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'SP',
            '8' : 'SP',
            '9' : 'SP',
            '1' : 'SP',
            'J' : 'SP',
            'Q' : 'SP',
            'K' : 'SP'},
    '99' : {'A' : 'S',
            '2' : 'SP',
            '3' : 'SP',
            '4' : 'SP',
            '5' : 'SP',
            '6' : 'SP',
            '7' : 'S',
            '8' : 'SP',
            '9' : 'SP',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    '11' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'JJ' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'QQ' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'},
    'KK' : {'A' : 'S',
            '2' : 'S',
            '3' : 'S',
            '4' : 'S',
            '5' : 'S',
            '6' : 'S',
            '7' : 'S',
            '8' : 'S',
            '9' : 'S',
            '1' : 'S',
            'J' : 'S',
            'Q' : 'S',
            'K' : 'S'}
}    
    
def make_choice(dealer_faceup_card, player_hand, hand_value): # function that returns the choice that bot will make
    if len(player_hand) > 1: 
        # The players hand is checked, this is to figure out whether the function is dealing with a split decks
        # or a whole deck. In this case, the player has a whole deck (a deck with more than one card), so the hand_vals
        # string is set to the value of the player's first two cards
        hand_vals = (f'{player_hand[0][0]}{player_hand[1][0]}')
    else:
        # In this case, the player only has 1 card in their hand, meaning that it's the hand resulting from a split. So
        # the hand_vals string in this case represent only the value of the players only card
        hand_vals = (f'{player_hand[0][0]}')  
    if hand_vals in perfect_strategy_table_aces: # if the player has an ace and another card
        # a specific set of decisions are made under this circumstance so a specific check is made for it
        return perfect_strategy_table_aces[hand_vals][dealer_faceup_card[0]] # returns that decision
    elif hand_vals in perfect_strategy_table_pairs:
        # if the first check doesn't pass, another check is made to see if the dealer is playing off a split
        # and a decision is made under that circumstance and returned
        return perfect_strategy_table_pairs[hand_vals][dealer_faceup_card[0]]
    # If the player doesn't have an ace and doesn't have a pair, then the decision is made based off 
    # the players hand count
    return perfect_strategy_table_counts[dealer_faceup_card[0]][hand_value]
    
    
    
    
    